[[command_weechat_away]]
[command]*`away`* attiva/disattiva lo stato di assenza::
........................................
/away  [-all] [<messaggio>]

     -all: attiva/disattiva lo stato di assenza su tutti i server connessi
messaggio: messaggio di assenza (se non specificato, lo stato di assenza viene rimosso)
........................................

[[command_weechat_bar]]
[command]*`bar`* gestione delle barre::
........................................
/bar  list|listfull|listitems
      add <nome> <tipo>[,<cond1>[,<cond2>...]] <posizione> <dimensione> <separatore> <item1>[,<item2>...]
      default [input|title|status|nicklist]
      del <nome>|-all
      set <nome> <opzione> <valore>
      hide|show|toggle <nome>
      scroll <nome> <finestra> <scroll_value>

         list: elenca tutte le barre
     listfull: elenca tutte le barre (dettagliato)
    listitems: elenca tutti gli elementi della barra
          add: aggiunge una nuova barra
         nome: nome della barra (deve essere unico)
         tipo:   root: al di fuori delle finestre,
               window: all'interno delle finestre, con opzioni condizionali (a seguire)
    cond1,...: condizione(i) per visualizzare la barra (solo per il tipo "window"):
                 active: sulla finestra attiva
               inactive: sulle finestre inattive
               nicklist: sulle finestre con la lista nick
               senza condizione, viene sempre mostrata
    posizione: bottom (basso), top (alto), left (sinistra) o right (destra)
   dimensione: dimensione della barra (in caratteri)
   separatore: 1 per usarlo (riga), 0 o nulla equivale a nessun separatore
    item1,...: elementi per questa barra (possono essere separati da virgole (spazio tra gli elementi) o "+" (elementi incollati))
      default: crea una barra predefinita (saranno tutte predefinite se non viene dato un nome per la barra)
          del: elimina una barra (o tutte le barre con -all)
          set: imposta un valore per la proprietà di una barra
      opzione: opzione da cambiare (per una lista di opzioni, consultare /set weechat.bar.<barname>.*)
       valore: nuovo valore per l'opzione
         hide: nasconde una barra
         show: mostra una barra nascosta
       toggle: nasconde/mostra una barra
       scroll: scorre una barra
     finestra: numero della finestra (usare '*' per la finestra corrente o le barre root)
 scroll_value: valore per lo scorrimento: 'x' o 'y', seguite da '+', '-', 'b' (inizio) or 'e' (fine), valore (per +/-), e %% opzionale (per scorrere di %% di larghezza/altezza, altrimenti il valore è il numero di caratteri)

Esempi:
  crea una barra con l'ora, numero del buffer + nome, e completamento:
    /bar add miabarra root bottom 1 0 [time],buffer_number+:+buffer_name,completion
  nasconde una barra:
    /bar hide miabarra
  scorre la lista nick di 10 righe in basso sul buffer corrente:
    /bar scroll nicklist * y+10
  scorre fino alla fine della lista nick sul buffer corrente:
    /bar scroll nicklist * ye
........................................

[[command_weechat_buffer]]
[command]*`buffer`* gestione dei buffer::
........................................
/buffer  list
         clear [<numero>|<nome>|-merged|-all]
         move|merge <numero>
         swap <numero1>|<nome1> [<numero2>|<nome2>]
         unmerge [<numero>|-all]
         close [<n1>[-<n2>]|<nome>]
         notify <livello>
         localvar
         set <proprietà> <valore>
         get <proprietà>
         <numero>|<nome>

    list: elenca i buffer (senza argomento viene mostrata questa lista)
   clear: pulisce il contenuto del buffer (numero per un buffer, -merged per i buffer incollati, -all per tutti i buffer o nessun parametro per quello corrente)
    move: sposta il buffer nella lista (può essere relativo, ad esempio -1)
    swap: scambia due buffer (scambia con il buffer corrente se viene specificato solo il nome/numero)
   merge: unisce il buffer corrente ad un altro (l'area di chat risulterà un mix di entrambi)
          (la combinazione predefinita ctrl-x alterna tra i buffer incollati)
 unmerge: stacca il buffer dagli altri che hanno lo stesso numero
   close: chiude buffer (numero/serie oppure nome sono opzionali)
  notify: imposta il livello di notifica per il buffer corrente: questo livello determina se il buffer deve essere aggiunto alla hotlist oppure no:
               none: mai
          highlight: solo per le notifiche
            message: messaggi dagli utenti + notifiche
                all: tutti i messaggi
              reset: ripristina al valore predefinito (tutto)
localvar: visualizza le variabili locali per il buffer corrente
     set: imposta una proprietà per il buffer corrente
     get: mostra una proprietà del buffer corrente
  numero: passa al buffer per numero, prefisso possibile:
          '+': passaggio relativo, aggiunge un numero a quello corrente
          '-': passaggio relativo, sottrae un numero a quello corrente
          '*': passa al numero, usando l'opzione "weechat.look.jump_current_to_previous_buffer"
    nome: passa al buffer tramite nome (parziale)

Esempi:
  pulisce il buffer corrente:
    /buffer clear
  sposta il buffer al numero 5:
    /buffer move 5
  scambia il buffer 1 con il 3:
    /buffer swap 1 3
  scambia il buffer #weechat con quello corrente:
    /buffer swap #weechat
  unisce con il buffer core:
    /buffer merge 1
  stacca il buffer:
    /buffer unmerge
  chiude il buffer corrente:
    /buffer close
  chiude i buffer da 5 a 7:
    /buffer close 5-7
  passa a #weechat:
    /buffer #weechat
  passa al buffer successivo:
    /buffer +1
........................................

[[command_weechat_color]]
[command]*`color`* definisce gli alias dei colori e visualizza la tavolozza dei colori::
........................................
/color  alias <colore> <nome>
        unalias <colore>
        reset

  alias: aggiunge un alias per un colore
unalias: elimina un alias
 colore: numero colore (maggiore o ugale a 0, il massimo dipende dal terminale, di solito 63 o 255)
   nome: nome alias per il colore (ad esempio: "arancione")
  reset: ripristina tutte le coppie di colore (richiesto quando non ci sono più coppie disponibili se il ripristino automatico è disabilitato, consultare l'opzione weechat.look.color_pairs_auto_reset)

Senza argomento, il comando mostra i colori in un nuovo buffer.

Esempi:
  aggiunge alias "arancione" per il colore 214:
    /color alias 214 arancione
  elimina il colore 214:
    /color unalias 214
........................................

[[command_weechat_command]]
[command]*`command`* esegui comando o plugin di WeeChat esplicito::
........................................
/command  <plugin> <comando>

 plugin: nome plugin ('weechat' per il comando interno di WeeChat)
comando: comando da eseguire (una '/' viene aggiunta automaticamente se non trovata all'inizio del comando)
........................................

[[command_weechat_cursor]]
[command]*`cursor`* movimento libero del cursore sullo schermo per eseguire azioni su aree specifiche dello schermo::
........................................
/cursor  go chat|<barra>|<x>,<y>
         move up|down|left|right|area_up|area_down|area_left|area_right
         stop

  go: sposta il cursore su un'area di chat, una barra (usando il nome della barra) o le coordinate "x.y"
move: sposta il cursore con direzione
stop: interrompe la modalità cursore

Senza argomenti, il comando abilita/disabilita la modalità cursore

Quando il mouse è abilitato (consultare /help mouse), per default il click con il tasto centrale avvia la modalità cursore in questa posizione.

Esempi:
  vai alla lista nick:
    /cursor go nicklist
  vai alle coordinate x=10, y=5:
    /cursor go 10,5
........................................

[[command_weechat_debug]]
[command]*`debug`* attiva debug per core/plugin::
........................................
/debug  list
        set <plugin> <livello>
        dump [<plugin>]
        buffer|color|infolists|memory|tags|term|windows
        mouse|cursor [verbose]
        hdata [free]

     list: elenca i plugin con i livelli di debug
      set: imposta il livello di debug per il plugin
   plugin: nome del plugin ("core" per il core di WeeChat)
  livello: livello di debug per il plugin (0 = disattiva debug)
     dump: salva un dump della memoria nel file di log di WeeChat (lo stesso dump viene salvato in caso di crash di WeeChat)
   buffer: esegue un dump del contenuto del buffer con valori esadecimali nel file di log
    color: mostra informazioni sulle coppie di colore correnti
   cursor: abilita/disabilita debug per la modalità cursore
    hdata: mostra informazioni su hdata (con free: rimuove tutti gli hdata in memoria)
    hooks: mostra informazioni sugli hook
infolists: mostra informazioni sulle liste info
   memory: mostra informazioni sull'uso della memoria
    mouse: abilita/disabilita debug per il mouse
     tags: mostra tag per le righe
     term: mostra informazioni sul terminale
  windows: mostra l'albero delle finestre
........................................

[[command_weechat_filter]]
[command]*`filter`* filtra messaggi nei buffer, per nascondere/mostrare in base a tag o regexp::
........................................
/filter  list
         enable|disable|toggle [<nome>]
         add <nome> <buffer>[,<buffer>...] <tag> <regex>]
         del <nome>|-all

   list: elenca tutti i filtri
 enable: abilita filtri (i filtri sono abilitati di default)
disable: disabilita filtri
 toggle: abilita/disabilita filtri
   nome: nome del filtro
    add: aggiunge un filtro
    del: elimina un filtro
   -all: elimina tutti i filtri
 buffer: elenco separato da virgole di buffer in cui il filtro è attivo:
         - nome completo che include il plugin (esempio: "irc.freenode.#weechat)
         - "*" indica tutti i buffer
         - un nome preceduto da '!' viene escluso
         - un nome può iniziare o terminare con '*' per includere più buffer
    tag: elenco di tag separati da virgole, per esempio: "irc_join,irc_part,irc_quit"
  regex: espressione regolare da cercare nella riga
         - usare '\t' per separare il prefisso dal messaggio, caratteri speciali come "|" vanno preceduti dal carattere escape: '\|')
         - se l'espressione regolare inizia con '!', il risultato corrispondente viene invertito (usare '\!' per iniziare con '!')

         - vengono create due espressioni regolari: una per il prefisso e l'altra per il messaggio
         - le espressioni regolari non sono sensibili alle maiuscole, possono iniziare con "(?-i)" per diventare sensibili alle maiuscole

Il tasto predefinito alt+'=' abilita/disabilita il filtro.

Tag usati di frequente:
  no_filter, no_highlight, no_log, log0..log9 (livello di log),
  notify_none, notify_message, notify_private, notify_highlight,
  nick_xxx (xxx è il nick nel messaggio) prefix_nick_ccc (ccc è il colore del nick),
  irc_xxx (xxx è il nome comando o il numero, consultare /server raw),   irc_numeric, irc_error, irc_action, irc_ctcp, irc_ctcp_reply, irc_smart_filter, away_info.
Per mostrare i tag per le righe nei buffer: /debug tags

Esempi:
  usa il filtro intelligente IRC per tutti i buffer:
     /filter add irc_smart * irc_smart_filter *
  usa il filtro intelligente IRC su tutti i buffer tranne quelli che contengono "#weechat" nel nome:
     /filter add irc_smart *,!*weechat* irc_smart_filter
  filtra tutti i messaggi entrata/uscita/abbandono di IRC:
     /filter add joinquit * irc_join,irc_part,irc_quit *
  filtra i nick visualizzati all'ingresso in un canale o con /names:
    /filter add nicks * irc_366 *
  filtra il nick "tizio" sul canale IRC #weechat:
    /filter add tizio irc.freenode.#weechat nick_tizio *
  filtra le righe contententi "weechat fa schifo" sul canale IRC #weechat:
    /filter add schifo irc.freenode.#weechat * weechat fa schifo
........................................

[[command_weechat_help]]
[command]*`help`* visualizza l'aiuto su comandi e opzioni::
........................................
/help  -list|-listfull [<plugin> [<plugin>...]]
       <comando>
       <opzione>

    -list: elenca i comandi, per plugin (senza argomento, viene mostrata questa lista)
-listfull: elenca i comandi con la relativa descrizione, per plugin
   plugin: elenca i comandi per questo plugin
  comando: nome di un comando
  opzione: nome di un'opzione (usare /set per consultare la lista)
........................................

[[command_weechat_history]]
[command]*`history`* mostra la cronologia dei comandi del buffer::
........................................
/history  <clear
          valore>

 clear: pulisci cronologia
valore: numero delle voci nella cronologia da mostrare
........................................

[[command_weechat_input]]
[command]*`input`* funzioni per la riga di comando::
........................................
/input  <azioni> [<argomenti>]

list of actions:
  return: simulate key "enter"
  complete_next: complete word with next completion
  complete_previous: complete word with previous completion
  search_text: search text in buffer
  search_switch_case: switch exact case for search
  search_previous: search previous line
  search_next: search next line
  search_stop: stop search
  delete_previous_char: delete previous char
  delete_next_char: delete next char
  delete_previous_word: delete previous word
  delete_next_word: delete next word
  delete_beginning_of_line: delete from beginning of line until cursor
  delete_end_of_line: delete from cursor until end of line
  delete_line: delete entire line
  clipboard_paste: paste from clipboard
  transpose_chars: transpose two chars
  undo: undo last command line action
  redo: redo last command line action
  move_beginning_of_line: move cursor to beginning of line
  move_end_of_line: move cursor to end of line
  move_previous_char: move cursor to previous char
  move_next_char: move cursor to next char
  move_previous_word: move cursor to previous word
  move_next_word: move cursor to next word
  history_previous: recall previous command in current buffer history
  history_next: recall next command in current buffer history
  history_global_previous: recall previous command in global history
  history_global_next: recall next command in global history
  jump_smart: jump to next buffer with activity
  jump_last_buffer: jump to last buffer
  jump_last_buffer_displayed: jump to last buffer displayed (before last jump to a buffer)
  jump_previously_visited_buffer: jump to previously visited buffer
  jump_next_visited_buffer: jump to next visited buffer
  hotlist_clear: clear hotlist
  grab_key: grab a key (optional argument: delay for end of grab, default is 500 milliseconds)
  grab_key_command: grab a key with its associated command (optional argument: delay for end of grab, default is 500 milliseconds)
  grab_mouse: grab mouse event code
  grab_mouse_area: grab mouse event code with area
  set_unread: set unread marker for all buffers
  set_unread_current_buffer: set unread marker for current buffer
  switch_active_buffer: switch to next merged buffer
  switch_active_buffer_previous: switch to previous merged buffer
  zoom_merged_buffer: zoom on merged buffer
  insert: insert text in command line
  paste_start: start paste (bracketed paste mode)
  paste_stop: stop paste (bracketed paste mode)

This command is used by key bindings or plugins.
........................................

[[command_weechat_key]]
[command]*`key`* associa/disassocia tasti::
........................................
/key  list|listdefault|listdiff [<contesto>]
      bind <tasto> [<comando> [<arg>]]
      bindctxt <contesto> <tasto> [<comando> <arg>]]
      unbind <tasto>
      unbindctxt <contesto> <chiave>
      reset <tasto>
      resetctxt <contesto> <tasto>
      resetall -yes [<contesto>]
      missing [<contesto>]

       list: elenca tutti i tasti correnti (senza argomento, viene visualizzata questa lista)
listdefault: elenca i tasti predefiniti
   listdiff: elenca le differenze tra tasti attuali e predefiniti (tasti aggiunti, ridefiniti o eliminati)
   contesto: nome del contesto ("default" oppure "search")
       bind: associa un comando ad un tasto o visualizza il comando associato al tasto (per il contesto "default")
   bindctxt: associa un comando ad un tasto o mostra il comando associato al tasto, per il contesto fornito
    comando: comando (più comandi vanno separati da punto e virgola)
     unbind: rimuove una combinazione di tasti (per il contesto "default")
 unbindctxt: rimuove la combinazione tasti per il contesto fornito
      reset: ripristina un tasto all'assegnazione predefinita
  resetctxt: ripristina un tasto alla combinazione predefinita per il contesto fornito
   resetall: ripristina le combinazioni ai valori predefiniti ed elimina TUTTE le combinazioni personalizzate (usare con cautela!)
    missing: aggiunge tasti mancanti (usando le combinazioni predefinite), utile dopo l'installazione di una nuova versione di WeeChat

Al momento di associare un comando ad un tasto si raccomanda di usare il tasto alt+k (oppure Esc e k), e digitare il tasto da associare: il codice tasto verrà inserito nella riga di comando.

Per il contesto "mouse" (possibile anche nel contesto "cursor"), il formato del tasto è: "@area:tasto" oppure "@area1>area2:tasto" dove area può essere:
          *: qualunque area sullo schermo
       chat: area di chat (qualunque buffer)
  chat(xxx): area di chat per il buffer con il nome "xxx" (nome completo includendo il plugin)
     bar(*): qualunque barra
   bar(xxx): barra "xxx"
    item(*): qualunque elemento barra
  item(xxx): elemento barra "xxx"
Il tasto può iniziare o terminare con '*' per corrispondere a più eventi del mouse.
Un valore speciale per questo comando con il formato "hsignal:nome" può essere usato per il contesto del mouse, e invierà hsignal "nome" con la tabella hash di focuse come argomento.
Può essere usato un altro valore speciale "-" per disabilitare il tasto (verrà ignorato quando si cercano i tasti).

Esempi:
  il tasto alt-x per alternare la barra della nicklist:
    /key bind meta-x /bar toggle nicklist
  il tasto alt-r per passare al canale IRC #weechat:
    /key bind meta-r /buffer #weechat
  ripristinare la combinazione predefinita per il tasto alt-r:
    /key reset meta-r
  il tasto "tab" per interrompere la ricerca nel buffer:
    /key bindctxt search ctrl-I /input search_stop
  il tasto centrale del mouse su un nick per ottenere le informazioni:
    /key bindctxt mouse @item(buffer_nicklist):button3 /msg nickserv info ${nick}
........................................

[[command_weechat_layout]]
[command]*`layout`* salva/applica/ripristina il layout per i buffer e le finestre::
........................................
/layout  save [buffers|windows]
         apply [buffers|windows]
         reset [buffers|windows]

   save: salva il layout corrente
  apply: applica il layout salvato
  reset: elimina il layout salvato
buffers: salva/applica modifiche solo ai buffer (ordine dei buffer)
windows: salva/applica modifiche solo alle finestre (buffer visualizzato da ogni finestra)

Senza argomenti, il comando visualizza il layout salvato.
........................................

[[command_weechat_mouse]]
[command]*`mouse`* controllo mouse::
........................................
/mouse  enable|disable|toggle [<ritardo>]

 enable: abilita mouse
disable: disabilita mouse
 toggle: abilita/disabilita mouse
ritardo: ritardo (in secondi) dopo il quale viene ripristinato lo stato iniziale del mouse (utile per disattivarlo temporaneamente)

Lo stato del mouse viene salvato nell'opzione "weechat.look.mouse".

Esempi:
  abilita mouse:
    /mouse enable
  abilita/disabilita mouse per 5 secondi:
    /mouse toggle 5
........................................

[[command_weechat_mute]]
[command]*`mute`* esegue un comando in silenzio::
........................................
/mute  [-current | -buffer <nome> | -all] comando

-current: nessun output sul buffer corrente
 -buffer: nessun output sul buffer specificato
    nome: nome completo del buffer (esempi: "irc.server.freenode", "irc.freenode.#weechat")
    -all: nessun output su TUTTI i buffer
 command: comando da eseguire in silenzio (una '/' viene aggiunta automaticamente all'inizio del comando se non trovata)

Se non viene specificata una destinazione (-current, -buffer o -all), la destinazione predefinita è il buffer core di WeeChat.

Esempi:
  salva la configurazione:
    /mute save
  messaggio sul canale IRC corrente:
    /mute -current msg * ciao!
  messaggio sul canale #weechat:
    /mute -buffer irc.freenode.#weechat msg #weechat ciao!
........................................

[[command_weechat_plugin]]
[command]*`plugin`* elenca/carica/scarica plugin::
........................................
/plugin  list|listfull [<nome>]
         load <nome_file> [<argomenti>]
         autoload [<argomenti>]
         reload [<nome> [<argomenti>]]
         unload [<nome>]

     list: elenca i plugin caricati
 listfull: elenca i plugin caricati (dettagliato)
     load: carica un plugin
 autoload: carica automaticamente un plugin nella directory di sistema o utente
   reload: ricarica un plugin (se non specificato, scarica e poi ricarica tutti i plugin)
   unload: scarica un plugin (se non specificato, scarica tutti i plugin
 nomefile: plugin (file) da caricare
     nome: nome di un plugin
argomenti: argomenti passati al plugin durante il caricamento

Senza argomento, questo comando elenca i plugin caricati.
........................................

[[command_weechat_proxy]]
[command]*`proxy`* gestione dei proxy::
........................................
/proxy  list
        add <nome> <tipo> <indirizzo> <porta> [<nomeutente> [<password>]]
        del <nome>|-all
        set <nome> <opzione> <valore>

    list: elenca tutti i proxy
     add: aggiunge un nuovo proxy
    nome: nome del proxy (deve essere unico)
    tipo: http, socks4 o socks5
 address: IP o nome host
    port: porta
username: nome utente (opzionale)
password: password (opzionale)
     del: elimina un proxy (o tutti i proxy con -all)
     set: imposta un valore per la proprietà di un proxy
  option: opzione da modificare (per una lista di opzioni, consultare /set weechat.proxy.<nomeproxy>.*)
   value: nuovo valore per l'opzione

Esempi:
  crea un proxy http, in esecuzione sull'host locale, porta 8888:
    /proxy add local http 127.0.0.1 8888
  crea un proxy http usando il protocollo IPv6:
    /proxy add local http ::1 8888
    /proxy set local ipv6 on
  crea un proxy socks5 con nomeutente/password:
    /proxy add myproxy socks5 sample.host.org 3128 myuser mypass
  elimina un proxy:
    /proxy del mioproxy
........................................

[[command_weechat_quit]]
[command]*`quit`* esce da WeeChat::
........................................
/quit  [-yes] [<argomenti>]

     -yes: richiesto se l'opzione option weechat.look.confirm_quit è abilitata
argomenti: testo inviato con il segnale "quit"
           (ad esempio il plugin irc usa questo testo per inviare il messaggio di uscita al server)
........................................

[[command_weechat_reload]]
[command]*`reload`* ricarica i file di configurazione da disco::
........................................
/reload  [<file> [<file....>]]

file: file di configurazione da ricaricare (senza estensione ".conf")

Senza argomento, vengono ricaricati tutti i file (WeeChat e plugin).
........................................

[[command_weechat_repeat]]
[command]*`repeat`* esegue un comando più volte::
........................................
/repeat  [-interval <ritardo>] <numero> <comando>

ritardo: ritardo tra l'esecuzione dei comandi (in millisecondi)
 numero: numero di volte in cui eseguire il comando
comando: comando da eseguire (una '/' viene aggiunta automaticamente se non viene trovata all'inizio del comando)

Tutti i comandi sono eseguiti sul buffer su cui viene dato il comando.

Esempio:
  scorre due pagine in alto:
    /repeat 2 /window page_up
........................................

[[command_weechat_save]]
[command]*`save`* salva i file di configurazione su disco::
........................................
/save  [<file> [<file....>]]

file: file di configurazione da salvare (senza estensione ".conf")

Senza argomento, vengono salvati tutti i file (WeeChat e plugin).
........................................

[[command_weechat_set]]
[command]*`set`* imposta le opzioni di configurazione::
........................................
/set  [<opzione> [<valore>]]

opzione: nome di un'opzione (può iniziare o terminare con '*' per elencare più opzioni)
 valore: nuovo valore per l'opzione

Il nuovo valore può essere, a seconda del tipo di variabile:
  booleano: on, off o toggle
  intero  : numero, ++numero o --numero
  stringa : qualsiasi stringa ("" per una stringa vuota)
  colore  : nome colore, ++numeero o --numero

Per tutti i tipi, è possibile usare null per rimuovere il valore dell'opzione (valore non definito). Ciò funziona solo per alcune variabili speciali dei plugin.

Esempi:
  mostra le opzioni relative alle notifiche:
    /set *highlight*
  aggiunge una parola alle notifiche:
    /set weechat.look.highlight "word"
........................................

[[command_weechat_unset]]
[command]*`unset`* annulla/ripristina opzione::
........................................
/unset  <opzione>

opzione: nome di un'opzione (può iniziare o terminare con "*" per il ripristino di più opzioni, attenzione!)

A seconda dell'opzione, essa viene ripristinata (per le opzioni standard) o rimossa (per le impostazioni opzionali, come i valori del server).

Esempi:
  ripristina un'opzione:
    /unset weechat.look.item_time_format
  ripristina tutte le opzioni del colore:
    /unset weechat.color.*
........................................

[[command_weechat_upgrade]]
[command]*`upgrade`* aggiorna WeeChat senza disconnettere dai server::
........................................
/upgrade  [<path_del_binario>]

path_del_binario: path del binario di WeeChat (di default è il corrente)

Questo comando aggiorna e ricarica una sessione di WeeChat in esecuzione. Il nuovo binario di WeeChat deve essere stato compilato o installato con un gestore pacchetti prima di eseguire questo comando.

Nota: le connessioni SSL vengono perdute durante l'aggiornamento, poiché il nuovo caricamento delle sessioni SSL non è ancora possibile con GnuTLS. La riconnessione automatica avviene dopo l'aggiornamento.

Il processo di aggiornamento è diviso in 4 fasi:
  1. salva la sessione in file per il core e i plugin (buffer, cronologia, ..)
  2. scarica tutti i plugin (i file di configurazione (*.conf) vengono scritti su disco)
  3. salva la configurazione di WeeChat (weechat.conf)
  4. esegui il nuovo binario di WeeChat e carica la sessione.
........................................

[[command_weechat_uptime]]
[command]*`uptime`* mostra l'uptime di WeeChat::
........................................
/uptime  [-o | -ol]

 -o: invia l'uptime al buffer corrente come input (stringa in inglese)
-ol: invia l'uptime al buffer corrente come input (stringa tradotta)
........................................

[[command_weechat_version]]
[command]*`version`* mostra la versione e la data di compilazione di WeeChat::
........................................
/version  [-o | -ol]

 -o: invia la versione al buffer corrente come input (stringa inglese)
-ol: invia la versione al buffer corrente come input (stringa tradotta)
........................................

[[command_weechat_wait]]
[command]*`wait`* pianifica l'esecuzione di un comando::
........................................
/wait  <numero>[<unità>] <comando>

 numero: tempo di attesa (numero intero)
  unità: valori opzionali sono:
           ms: millisecondi
            s: secondi (predefinito)
            m: minuti
            h: ore
comando: comando da eseguire (o testo da inviare al buffer se il comando non inizia con '/')

Nota: il comando viene eseguito sui buffer dove /wait è stato eseguito (se il buffer non viene trovato (per esempio se è stato chiuso prima dell'esecuzione), allora il comando verrà eseguito sul buffer core di WeeChat)

Esempi:
  entra nel canale tra 10 secondi:
    /wait 10 /join #test
  imposta assenza tra 15 minuti:
    /wait 15m /away -all Sono assente
  scrive 'ciao' tra 2 minuti:
    /wait 2m ciao
........................................

[[command_weechat_window]]
[command]*`window`* gestione delle finestre::
........................................
/window  list
         -1|+1|b#|up|down|left|right [-window <numero>]
         <numero>
         splith|splitv [-window <numero>] [<pct>]
         resize [-window <numero>] [+/-]<pct>
         balance
         merge [-window <numero>] [all]
         page_up|page_down [-window <numero>]
         refresh
         scroll [-window <numero>] [+/-]<value>[s|m|h|d|M|y]
         scroll_horiz [-window <numero>] [+/-]<value>[%]
         scroll_up|scroll_down|scroll_top|scroll_bottom|scroll_previous_highlight|scroll_next_highlight|scroll_unread [-window <numero>]
         swap [-window <numero>] [up|down|left|right]
         zoom[-window <numero>]

         list: elenca le finestre aperte (senza argomento, questa lista viene visualizzata)
           -1: salta alla finestra precedente
           +1: salta alla finestra successiva
           b#: salta alla finestra successiva che visualizza il buffer numero #
           up: passa alla finestra superiore a quella corrente
         down: passa alla finestra inferiore a quella attiva
         left: passa alla finestra a sinistra
        right: passa alla finestra a destra
       numero: numero della finestra (consultare /window list)
       splith: divide la finestra attiva orizzontalmente
       splitv: divide la finestra attiva verticalmente
       resize: ridimensiona finestra, la nuova dimensione è <pct> percentuale della finestra genitore
      balance: bilancia le dimensioni tutte le finestre
        merge: unisce la finestra con un'altra (all = mantiente una sola finestra)
      page_up: scorre di una pagina in alto
    page_down: scorre di una pagina in basso
      refresh: aggiorna lo schermo
       scroll: scorre di un numero di righe (+/-N) o in base al tempo: s=secondi, m=minuti, h=ore, d=giorni, M=mesi, y=anni
 scroll_horiz: scorre orizzontalmente un numero di colonne (+/-N) una percentuale della dimensione della finestra (questo scorrimento è possibile solo sui buffer con contenuto libero)
    scroll_up: scorre di alcune righe in alto
  scroll_down: scorre di alcune righe in basso
   scroll_top: scorre fino all'inizio del buffer
scroll_bottom: scorre fino alla fine del buffer buffer
scroll_previous_highlight: passa alla notifica precedente
    scroll_next_highlight: passa alla notifica successiva
    	     scroll_unread: passa al segnalibro non letto
         swap: scambia i buffer di due finestra (con direzione opzionale per la finestra di destinazione)
         zoom: ingrandimento sulla finestra

Per splith e splitv, pct è una percentuale che rappresenta la dimensione della nuova finestra, calcolata con la finestra attiva come riferimento per la dimensione. Per esempio 25 vuol dire creare una finestra di dimensione = dimensione_attuale / 4

Esempi:
  salta alla finestra che visualizza il buffer #1:
    /window b1
  scorre di due righe in alto:
    /window scroll -2
  scorre all'indietro di due giorni:
    /window scroll -2d
  scorre all'inizio del giorno attuale:
     /window scroll -d
  zoom sulla finestra #2:
    /window zoom -window 2
........................................

